<?xml version="1.0"?>        <!-- to recognize the file as xml file, URDF uses metric system -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">        <!-- robot tag -->

    <!-- <xacro:include filename="common_properties.xacro" /> -->

    <xacro:property name="arm_base_length" value="0.1" />
    <xacro:property name="arm_base_width" value="0.1" />
    <xacro:property name="arm_base_height" value="0.02" />
    <xacro:property name="arm_link_radius" value="0.02" />
    <xacro:property name="arm_link_length" value="0.3" />
    <xacro:property name="arm_link_mass" value="0.3" />

    <!-- <link name="base_footprint" /> -->

    <link name="arm_base_link">
        <visual>
            <geometry>
                <box size="${arm_base_length} ${arm_base_width} ${arm_base_height}" />
            </geometry>
            <origin xyz="0 0 ${arm_base_height/2.0}" rpy="0 0 0" />
            <material name="orange" />
        </visual>
        <collision>
            <geometry>
                <box size="${arm_base_length} ${arm_base_width} ${arm_base_height}" />
            </geometry>
            <origin xyz="0 0 ${arm_base_height/2.0}" rpy="0 0 0" />
        </collision>
        <xacro:box_inertia m="0.5" l="${arm_base_length}" w="${arm_base_width}" h="${arm_base_height}"
                           xyz="0 0 ${arm_base_height/2.0}" rpy="0 0 0" />
    </link>

    <xacro:macro name="arm_link" params="prefix colour shift" >
        <link name="${prefix}_link">
            <visual>
                <geometry>
                    <cylinder radius="${arm_link_radius}" length="${arm_link_length}" />
                </geometry>
                <origin xyz="0 0 ${shift}" rpy="0 0 0" />
                <material name="${colour}" />
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${arm_link_radius}" length="${arm_link_length}" />
                </geometry>
                <origin xyz="0 0 ${shift}" rpy="0 0 0" />
            </collision>
            <xacro:cylinder_inertia m="${arm_link_mass}" r="${arm_link_radius}" h="${arm_link_length}"
                                    xyz="0 0 ${shift}" rpy="0 0 0" />
        </link>
    </xacro:macro>


    <xacro:arm_link prefix="forearm" colour="yellow" shift="${arm_link_length/2.0}" />
    <xacro:arm_link prefix="hand" colour="orange" shift="${arm_link_length/2.0}"/>

    <joint name="footprint_arm_base_joint" type="fixed">     <!-- set joint name and type-->
        <parent link="base_link" />
        <child link="arm_base_link" />
        <origin xyz="${base_length / 4.0} 0 ${base_height}" rpy="0 0 0" />
    </joint>

    <joint name="base_forearm_joint" type="revolute" >
        <parent link="arm_base_link" />
        <child link="forearm_link" />
        <origin xyz="0 0 ${arm_base_height}" rpy="0 0 0" />
        <axis xyz="0 1 0" />
        <limit lower="0" upper="${pi/2.0}" effort="100" velocity="100" />
        <dynamics friction="0.05" damping="0.1" />
    </joint>

    <joint name="forearm_hand_joint" type="revolute" >
        <parent link="forearm_link" />
        <child link="hand_link" />
        <origin xyz="0 0 ${arm_link_length}" rpy="0 0 0" />
        <axis xyz="0 1 0" />
        <limit lower="0" upper="${pi/2.0}" effort="100" velocity="100" />
        <dynamics friction="0.05" damping="0.1" />
    </joint>



    <gazebo reference="arm_base_link">
        <material> Gazebo/Orange </material>
    </gazebo>

    <gazebo reference="forearm_link">
        <material> Gazebo/Yellow </material>
    </gazebo>

    <gazebo reference="hand_link">
        <material> Gazebo/Orange </material>
    </gazebo>

    <gazebo>
        <plugin name="joint_state_publisher_controller" filename="libgazebo_ros_joint_state_publisher.so">

            <update_rate>10</update_rate>

            <!-- <joint_name>footprint_arm_base_joint</joint_name> -->
            <joint_name>base_forearm_joint</joint_name>
            <joint_name>forearm_hand_joint</joint_name>

        </plugin>

        <plugin name="joint_pose_trajectory_controller" filename="libgazebo_ros_joint_pose_trajectory.so">

            <!-- Update rate in Hz -->
            <update_rate>2</update_rate>

        </plugin>
    </gazebo>


</robot>